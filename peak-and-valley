#Peaks and Valleys: In an array of integers, a "peak" is an element which is greater than or equal
#to the adjacent integers and a "valley" is an element which is less than or equal to the adjacent
#integers. For example, in the array {5, 8, 6, 2, 3, 4, 6}, {8, 6} are peaks and {5, 2} are valleys. Given an
#array of integers, sort the array into an alternating sequence of peaks and valleys.
#EXAMPLE
#Input: {5, 3, 1, 2, 3}
#Output: {5, 1, 3, 2, 3} 


A=[1,2,3,4,5,6,7,8,9]
A.sort()
i=1
while i<len(A):
        if A[i]<A[i+1]:
            A[i], A[i+1]=A[i+1], A[i]
            i+=2
print(A)

def peakAndValley(A):
    i=1
    while i<len(A):
        maxIndex=maxCal(A, i-1, i, i+1)
        if maxIndex!=A[i]:
            A[i], A[maxIndex]= A[maxIndex], A[i]
        i+=2
    print(A)

def maxCal(A, i, j, k):
    iVal=A[i] if i<len(A) else float("-inf")
    jVal=A[j] if j<len(A) else float("-inf")
    kVal=A[k] if k<len(A) else float("-inf")

    maxIndex=max(iVal, jVal, kVal)
    return maxIndex

peakAndValley(A)
